
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uypmzhnwccwqtbytbsgz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV5cG16aG53Y2N3cXRieXRic2d6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4Njk0MjQsImV4cCI6MjA1OTQ0NTQyNH0.gnopO4ZkqTbWe9_WFWsLUDK1F7ZXz5i5KHCUVawws6M";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      storage: typeof window !== 'undefined' ? localStorage : undefined
    },
    global: {
      headers: {
        'x-client-info': 'hackathon-judge@1.0.0',
      },
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
  }
);

// Add a function to test the connection
export const testSupabaseConnection = async () => {
  try {
    const { error } = await supabase.from('teams').select('id').limit(1);
    
    if (error && error.code === 'PGRST301') {
      // This is a common RLS policy error, indicating the connection works
      // but the user doesn't have permission (likely not authenticated)
      return { success: true, error: null };
    }
    
    return { success: !error, error };
  } catch (error) {
    console.error('Supabase connection test failed:', error);
    return { success: false, error };
  }
};
